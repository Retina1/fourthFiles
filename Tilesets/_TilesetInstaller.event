// split plist

PUSH
ORG 0x19900
POIN TileConfigPLIST

ORG 0x19968
POIN ObjTypePalettePLIST

ORG 0x1999C
POIN ObjTypePalettePLIST

ORG 0x30134
POIN TileAnimPLIST

ORG 0x30C78
POIN TileAnimPLIST



//we don't actually need to split the map plist i think
/*ORG 0x34680
POIN MapPLIST

ORG 0x346AC
POIN MapChangesPLIST

ORG 0xB3018
POIN MapChangesPLIST

ORG 0xC66E8
POIN MapChangesPLIST*/

POP

ALIGN 4
TileConfigPLIST:
FILL (0xFF * 4)

ALIGN 4
ObjTypePalettePLIST:
FILL (0xFF * 4)

ALIGN 4
TileAnimPLIST:
FILL (0xFF * 4)

ALIGN 4
MapPLIST:
FILL (0xFF * 4)

ALIGN 4
MapChangesPLIST:
FILL (0xFF * 4)

#define TileConfigPointerTable(aId, apointer) "PUSH; ORG TileConfigPLIST+(0x4 * aId); POIN apointer; POP"
#define ObjTypePalettePointerTable(aId, apointer) "PUSH; ORG ObjTypePalettePLIST+(0x4 * aId); POIN apointer; POP"
#define TileAnimPointerTable(aId, apointer) "PUSH; ORG TileAnimPLIST+(0x4 * aId); POIN apointer; POP"
#define Map_Pointer_Table(aId, apointer) "PUSH; ORG MapPLIST+(4*aId); POIN apointer; POP"
#define MapChangesPointerTable(aId, apointer) "PUSH; ORG MapChangesPLIST+(0x4 * aId); POIN apointer; POP"
#define EventsIDEntry(ChapterID) "PUSH; ORG NewChapterDataTable +(148 * ChapterID)+ 116 ; BYTE ChapterID+1; POP" // 116 is the offset of the EventsID byte, while each row has 148 bytes of data  
// if you really want to have it not just be identical to your chapter ID+1, then use this below I guess 
#define EventsIDEntry(ChapterID, EventID) "PUSH; ORG NewChapterDataTable +(148 * ChapterID)+ 116 ; BYTE EventID; POP" // 116 is the offset of the EventsID byte, while each row has 148 bytes of data  


ALIGN 4
VillageObjects:
#incbin "Village1.dmp"
ALIGN 4
Village1Palette:
#incbin "Village1_pal.dmp"
ALIGN 4
Village1Tiles:
#incext compress "Village.mapchip_config"
ALIGN 4
GuildhallTiles:
#incext compress "Guildhall.mapchip_config"
TileConfigPointerTable(VillageCONFIG, Village1Tiles)
TileConfigPointerTable(GuildhallCONFIG, GuildhallTiles)
ObjTypePalettePointerTable(Village1OBJ, VillageObjects)
ObjTypePalettePointerTable(Village1PAL, Village1Palette)

ALIGN 4
FieldsObjects:
#incbin "Fields1.dmp"
ALIGN 4
Fields1Palette:
#incbin "Fields1_pal.dmp"
ALIGN 4
Fields1Tiles:
#incext compress "Fields.mapchip_config"
TileConfigPointerTable(FieldsCONFIG, Fields1Tiles)
ObjTypePalettePointerTable(Fields1OBJ, FieldsObjects)
ObjTypePalettePointerTable(Fields1PAL, Fields1Palette)

ALIGN 4
CityObjects:
#incbin "City1.dmp"
ALIGN 4
City1Palette:
#incbin "City1_pal.dmp"
ALIGN 4
City1Tiles:
#incext compress "City.mapchip_config"
TileConfigPointerTable(CityCONFIG, City1Tiles)
ObjTypePalettePointerTable(City1OBJ, CityObjects)
ObjTypePalettePointerTable(City1PAL, City1Palette)

ALIGN 4
TavernObjects:
#incbin "Tavern1.dmp"
ALIGN 4
Tavern1Palette:
#incbin "Tavern1_pal.dmp"
ALIGN 4
Tavern1Tiles:
#incext compress "Tavern.mapchip_config"
TileConfigPointerTable(TavernCONFIG, Tavern1Tiles)
ObjTypePalettePointerTable(Tavern1OBJ, TavernObjects)
ObjTypePalettePointerTable(Tavern1PAL, Tavern1Palette)